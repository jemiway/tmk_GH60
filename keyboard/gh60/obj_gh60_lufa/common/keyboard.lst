   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../tmk_core/common/keyboard.c **** #endif
  36:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../tmk_core/common/keyboard.c **** #endif
  39:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../tmk_core/common/keyboard.c **** #endif
  42:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../tmk_core/common/keyboard.c **** #endif
  45:../../tmk_core/common/keyboard.c **** 
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../tmk_core/common/keyboard.c **** {
  50:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../tmk_core/common/keyboard.c ****         return false;
  54:../../tmk_core/common/keyboard.c **** 
  55:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../tmk_core/common/keyboard.c ****             return true;
  59:../../tmk_core/common/keyboard.c ****     }
  60:../../tmk_core/common/keyboard.c ****     return false;
  61:../../tmk_core/common/keyboard.c **** }
  62:../../tmk_core/common/keyboard.c **** #endif
  63:../../tmk_core/common/keyboard.c **** 
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 67 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 68 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 72 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 73 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 74 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 87 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_set_leds,"ax",@progbits
  67               	.global	keyboard_set_leds
  69               	keyboard_set_leds:
  70               	.LFB107:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c **** 	// Jemi&20160114 
 110:../../tmk_core/common/keyboard.c ****     matrix_scan();
 111:../../tmk_core/common/keyboard.c **** 	
 112:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 113:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 114:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 115:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 116:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 117:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 118:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 119:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 120:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 121:../../tmk_core/common/keyboard.c ****                  */
 122:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 123:../../tmk_core/common/keyboard.c ****                     matrix_print();
 124:../../tmk_core/common/keyboard.c ****                 }
 125:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 126:../../tmk_core/common/keyboard.c ****                 continue;
 127:../../tmk_core/common/keyboard.c ****             }
 128:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 129:../../tmk_core/common/keyboard.c **** #endif
 130:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 131:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 132:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 133:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 134:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 135:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 136:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 137:../../tmk_core/common/keyboard.c ****                     });
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 140:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 141:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 142:../../tmk_core/common/keyboard.c ****                 }
 143:../../tmk_core/common/keyboard.c ****             }
 144:../../tmk_core/common/keyboard.c ****         }
 145:../../tmk_core/common/keyboard.c ****     }
 146:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 147:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 150:../../tmk_core/common/keyboard.c **** 
 151:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 152:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 153:../../tmk_core/common/keyboard.c ****     mousekey_task();
 154:../../tmk_core/common/keyboard.c **** #endif
 155:../../tmk_core/common/keyboard.c **** 
 156:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 157:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 158:../../tmk_core/common/keyboard.c **** #endif
 159:../../tmk_core/common/keyboard.c **** 
 160:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 161:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 162:../../tmk_core/common/keyboard.c **** #endif
 163:../../tmk_core/common/keyboard.c **** 
 164:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 165:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 166:../../tmk_core/common/keyboard.c **** #endif
 167:../../tmk_core/common/keyboard.c **** 
 168:../../tmk_core/common/keyboard.c ****     // update LED
 169:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 170:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 171:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 172:../../tmk_core/common/keyboard.c ****     }
 173:../../tmk_core/common/keyboard.c **** }
 174:../../tmk_core/common/keyboard.c **** 
 175:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 176:../../tmk_core/common/keyboard.c **** {
  71               		.loc 1 176 0
  72               		.cfi_startproc
  73               	.LVL4:
  74 0000 CF93      		push r28
  75               	.LCFI0:
  76               		.cfi_def_cfa_offset 3
  77               		.cfi_offset 28, -2
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 1 */
  81               	.L__stack_usage = 1
  82 0002 C82F      		mov r28,r24
 177:../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  83               		.loc 1 177 0
  84 0004 8091 0000 		lds r24,debug_config
  85               	.LVL5:
  86 0008 82FF      		sbrs r24,2
  87 000a 00C0      		rjmp .L6
  88               		.loc 1 177 0 is_stmt 0 discriminator 1
  89 000c 80FF      		sbrs r24,0
  90 000e 00C0      		rjmp .L7
  91               		.loc 1 177 0 discriminator 2
  92 0010 80E0      		ldi r24,lo8(__c.4780)
  93 0012 90E0      		ldi r25,hi8(__c.4780)
  94 0014 0E94 0000 		call xputs
  95               	.LVL6:
  96               	.L7:
  97               		.loc 1 177 0 discriminator 4
  98 0018 8091 0000 		lds r24,debug_config
  99 001c 80FF      		sbrs r24,0
 100 001e 00C0      		rjmp .L8
 101               		.loc 1 177 0 discriminator 5
 102 0020 1F92      		push __zero_reg__
 103               	.LCFI1:
 104               		.cfi_def_cfa_offset 4
 105 0022 CF93      		push r28
 106               	.LCFI2:
 107               		.cfi_def_cfa_offset 5
 108 0024 80E0      		ldi r24,lo8(__c.4782)
 109 0026 90E0      		ldi r25,hi8(__c.4782)
 110 0028 9F93      		push r25
 111               	.LCFI3:
 112               		.cfi_def_cfa_offset 6
 113 002a 8F93      		push r24
 114               	.LCFI4:
 115               		.cfi_def_cfa_offset 7
 116 002c 0E94 0000 		call __xprintf
 117               	.LVL7:
 118 0030 0F90      		pop __tmp_reg__
 119 0032 0F90      		pop __tmp_reg__
 120 0034 0F90      		pop __tmp_reg__
 121 0036 0F90      		pop __tmp_reg__
 122               	.LCFI5:
 123               		.cfi_def_cfa_offset 3
 124               	.L8:
 125               		.loc 1 177 0 discriminator 7
 126 0038 8091 0000 		lds r24,debug_config
 127 003c 80FF      		sbrs r24,0
 128 003e 00C0      		rjmp .L6
 129               		.loc 1 177 0 discriminator 8
 130 0040 80E0      		ldi r24,lo8(__c.4784)
 131 0042 90E0      		ldi r25,hi8(__c.4784)
 132 0044 0E94 0000 		call xputs
 133               	.LVL8:
 134               	.L6:
 178:../../tmk_core/common/keyboard.c ****     led_set(leds);
 135               		.loc 1 178 0 is_stmt 1
 136 0048 8C2F      		mov r24,r28
 137               	/* epilogue start */
 179:../../tmk_core/common/keyboard.c **** }
 138               		.loc 1 179 0
 139 004a CF91      		pop r28
 140               	.LVL9:
 178:../../tmk_core/common/keyboard.c ****     led_set(leds);
 141               		.loc 1 178 0
 142 004c 0C94 0000 		jmp led_set
 143               	.LVL10:
 144               		.cfi_endproc
 145               	.LFE107:
 147               		.section	.text.keyboard_task,"ax",@progbits
 148               	.global	keyboard_task
 150               	keyboard_task:
 151               	.LFB106:
 100:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 152               		.loc 1 100 0
 153               		.cfi_startproc
 154 0000 4F92      		push r4
 155               	.LCFI6:
 156               		.cfi_def_cfa_offset 3
 157               		.cfi_offset 4, -2
 158 0002 5F92      		push r5
 159               	.LCFI7:
 160               		.cfi_def_cfa_offset 4
 161               		.cfi_offset 5, -3
 162 0004 7F92      		push r7
 163               	.LCFI8:
 164               		.cfi_def_cfa_offset 5
 165               		.cfi_offset 7, -4
 166 0006 8F92      		push r8
 167               	.LCFI9:
 168               		.cfi_def_cfa_offset 6
 169               		.cfi_offset 8, -5
 170 0008 9F92      		push r9
 171               	.LCFI10:
 172               		.cfi_def_cfa_offset 7
 173               		.cfi_offset 9, -6
 174 000a AF92      		push r10
 175               	.LCFI11:
 176               		.cfi_def_cfa_offset 8
 177               		.cfi_offset 10, -7
 178 000c BF92      		push r11
 179               	.LCFI12:
 180               		.cfi_def_cfa_offset 9
 181               		.cfi_offset 11, -8
 182 000e CF92      		push r12
 183               	.LCFI13:
 184               		.cfi_def_cfa_offset 10
 185               		.cfi_offset 12, -9
 186 0010 DF92      		push r13
 187               	.LCFI14:
 188               		.cfi_def_cfa_offset 11
 189               		.cfi_offset 13, -10
 190 0012 EF92      		push r14
 191               	.LCFI15:
 192               		.cfi_def_cfa_offset 12
 193               		.cfi_offset 14, -11
 194 0014 FF92      		push r15
 195               	.LCFI16:
 196               		.cfi_def_cfa_offset 13
 197               		.cfi_offset 15, -12
 198 0016 0F93      		push r16
 199               	.LCFI17:
 200               		.cfi_def_cfa_offset 14
 201               		.cfi_offset 16, -13
 202 0018 1F93      		push r17
 203               	.LCFI18:
 204               		.cfi_def_cfa_offset 15
 205               		.cfi_offset 17, -14
 206 001a CF93      		push r28
 207               	.LCFI19:
 208               		.cfi_def_cfa_offset 16
 209               		.cfi_offset 28, -15
 210 001c DF93      		push r29
 211               	.LCFI20:
 212               		.cfi_def_cfa_offset 17
 213               		.cfi_offset 29, -16
 214 001e CDB7      		in r28,__SP_L__
 215 0020 DEB7      		in r29,__SP_H__
 216               	.LCFI21:
 217               		.cfi_def_cfa_register 28
 218 0022 2A97      		sbiw r28,10
 219               	.LCFI22:
 220               		.cfi_def_cfa_offset 27
 221 0024 0FB6      		in __tmp_reg__,__SREG__
 222 0026 F894      		cli
 223 0028 DEBF      		out __SP_H__,r29
 224 002a 0FBE      		out __SREG__,__tmp_reg__
 225 002c CDBF      		out __SP_L__,r28
 226               	/* prologue: function */
 227               	/* frame size = 10 */
 228               	/* stack size = 25 */
 229               	.L__stack_usage = 25
 230               	.LVL11:
 110:../../tmk_core/common/keyboard.c **** 	
 231               		.loc 1 110 0
 232 002e 0E94 0000 		call matrix_scan
 233               	.LVL12:
 234 0032 90E0      		ldi r25,lo8(matrix_prev.4760)
 235 0034 C92E      		mov r12,r25
 236 0036 90E0      		ldi r25,hi8(matrix_prev.4760)
 237 0038 D92E      		mov r13,r25
 238 003a 00E0      		ldi r16,0
 239 003c 10E0      		ldi r17,0
 240               	.LBB2:
 241               	.LBB3:
 132:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 242               		.loc 1 132 0
 243 003e AA24      		clr r10
 244 0040 A394      		inc r10
 245 0042 B12C      		mov r11,__zero_reg__
 246               	.LVL13:
 247               	.L22:
 248 0044 702E      		mov r7,r16
 249               	.LVL14:
 250               	.LBE3:
 113:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 251               		.loc 1 113 0
 252 0046 802F      		mov r24,r16
 253 0048 0E94 0000 		call matrix_get_row
 254               	.LVL15:
 255 004c 4C01      		movw r8,r24
 256               	.LVL16:
 114:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 257               		.loc 1 114 0
 258 004e F601      		movw r30,r12
 259 0050 4190      		ld r4,Z+
 260 0052 5190      		ld r5,Z+
 261 0054 6F01      		movw r12,r30
 262 0056 4826      		eor r4,r24
 263 0058 5926      		eor r5,r25
 264               	.LVL17:
 115:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 265               		.loc 1 115 0
 266 005a 4114      		cp r4,__zero_reg__
 267 005c 5104      		cpc r5,__zero_reg__
 268 005e 01F4      		brne .L21
 269               	.L29:
 270               	.LVL18:
 271 0060 0F5F      		subi r16,-1
 272 0062 1F4F      		sbci r17,-1
 273               	.LVL19:
 112:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 274               		.loc 1 112 0
 275 0064 0530      		cpi r16,5
 276 0066 1105      		cpc r17,__zero_reg__
 277 0068 01F4      		brne .L22
 278               	.LBE2:
 147:../../tmk_core/common/keyboard.c **** 
 279               		.loc 1 147 0
 280 006a 8FEF      		ldi r24,lo8(-1)
 281 006c 8983      		std Y+1,r24
 282 006e 8A83      		std Y+2,r24
 283 0070 1B82      		std Y+3,__zero_reg__
 284 0072 0E94 0000 		call timer_read
 285               	.LVL20:
 286 0076 8160      		ori r24,1
 287 0078 782F      		mov r23,r24
 288 007a 9D83      		std Y+5,r25
 289 007c 8C83      		std Y+4,r24
 290 007e 4981      		ldd r20,Y+1
 291 0080 5A81      		ldd r21,Y+2
 292 0082 6B81      		ldd r22,Y+3
 293 0084 8D81      		ldd r24,Y+5
 294 0086 0E94 0000 		call action_exec
 295               	.LVL21:
 296 008a 00C0      		rjmp .L27
 297               	.L21:
 298               	.LBB5:
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 299               		.loc 1 130 0
 300 008c 8091 0000 		lds r24,debug_config
 301 0090 81FD      		sbrc r24,1
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 302               		.loc 1 130 0 is_stmt 0 discriminator 1
 303 0092 0E94 0000 		call matrix_print
 304               	.LVL22:
 305               	.L24:
 306               	.LBE5:
 110:../../tmk_core/common/keyboard.c **** 	
 307               		.loc 1 110 0 is_stmt 1
 308 0096 20E0      		ldi r18,0
 309 0098 30E0      		ldi r19,0
 310               	.LVL23:
 311               	.L28:
 312               	.LBB6:
 313               	.LBB4:
 132:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 314               		.loc 1 132 0
 315 009a 7501      		movw r14,r10
 316 009c 022E      		mov r0,r18
 317 009e 00C0      		rjmp 2f
 318               		1:
 319 00a0 EE0C      		lsl r14
 320 00a2 FF1C      		rol r15
 321               		2:
 322 00a4 0A94      		dec r0
 323 00a6 02F4      		brpl 1b
 324 00a8 C701      		movw r24,r14
 325 00aa 8421      		and r24,r4
 326 00ac 9521      		and r25,r5
 327 00ae 892B      		or r24,r25
 328 00b0 01F0      		breq .L25
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 329               		.loc 1 133 0
 330 00b2 2E83      		std Y+6,r18
 331 00b4 7F82      		std Y+7,r7
 135:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 332               		.loc 1 135 0
 333 00b6 8E20      		and r8,r14
 334 00b8 9F20      		and r9,r15
 335               	.LVL24:
 336 00ba 91E0      		ldi r25,lo8(1)
 337 00bc 8928      		or r8,r9
 338 00be 01F4      		brne .L26
 339 00c0 90E0      		ldi r25,0
 340               	.L26:
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 341               		.loc 1 133 0
 342 00c2 9887      		std Y+8,r25
 136:../../tmk_core/common/keyboard.c ****                     });
 343               		.loc 1 136 0
 344 00c4 0E94 0000 		call timer_read
 345               	.LVL25:
 346 00c8 8160      		ori r24,1
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 347               		.loc 1 133 0
 348 00ca 782F      		mov r23,r24
 349 00cc 9A87      		std Y+10,r25
 350 00ce 8987      		std Y+9,r24
 351 00d0 4E81      		ldd r20,Y+6
 352 00d2 5F81      		ldd r21,Y+7
 353 00d4 6885      		ldd r22,Y+8
 354 00d6 8A85      		ldd r24,Y+10
 355 00d8 0E94 0000 		call action_exec
 356               	.LVL26:
 139:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 357               		.loc 1 139 0
 358 00dc 000F      		lsl r16
 359 00de 111F      		rol r17
 360               	.LVL27:
 361 00e0 F801      		movw r30,r16
 362 00e2 E050      		subi r30,lo8(-(matrix_prev.4760))
 363 00e4 F040      		sbci r31,hi8(-(matrix_prev.4760))
 364 00e6 8081      		ld r24,Z
 365 00e8 9181      		ldd r25,Z+1
 366 00ea E826      		eor r14,r24
 367 00ec F926      		eor r15,r25
 368 00ee F182      		std Z+1,r15
 369 00f0 E082      		st Z,r14
 141:../../tmk_core/common/keyboard.c ****                 }
 370               		.loc 1 141 0
 371 00f2 00C0      		rjmp .L27
 372               	.LVL28:
 373               	.L25:
 374 00f4 2F5F      		subi r18,-1
 375 00f6 3F4F      		sbci r19,-1
 376               	.LVL29:
 131:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 377               		.loc 1 131 0 discriminator 2
 378 00f8 2E30      		cpi r18,14
 379 00fa 3105      		cpc r19,__zero_reg__
 380 00fc 01F4      		brne .L28
 381 00fe 00C0      		rjmp .L29
 382               	.LVL30:
 383               	.L27:
 384               	.LBE4:
 385               	.LBE6:
 153:../../tmk_core/common/keyboard.c **** #endif
 386               		.loc 1 153 0
 387 0100 0E94 0000 		call mousekey_task
 388               	.LVL31:
 169:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 389               		.loc 1 169 0
 390 0104 1091 0000 		lds r17,led_status.4761
 391 0108 0E94 0000 		call host_keyboard_leds
 392               	.LVL32:
 393 010c 1817      		cp r17,r24
 394 010e 01F0      		breq .L20
 170:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 395               		.loc 1 170 0
 396 0110 0E94 0000 		call host_keyboard_leds
 397               	.LVL33:
 398 0114 8093 0000 		sts led_status.4761,r24
 399               	/* epilogue start */
 173:../../tmk_core/common/keyboard.c **** 
 400               		.loc 1 173 0
 401 0118 2A96      		adiw r28,10
 402 011a 0FB6      		in __tmp_reg__,__SREG__
 403 011c F894      		cli
 404 011e DEBF      		out __SP_H__,r29
 405 0120 0FBE      		out __SREG__,__tmp_reg__
 406 0122 CDBF      		out __SP_L__,r28
 407 0124 DF91      		pop r29
 408 0126 CF91      		pop r28
 409 0128 1F91      		pop r17
 410 012a 0F91      		pop r16
 411 012c FF90      		pop r15
 412 012e EF90      		pop r14
 413 0130 DF90      		pop r13
 414 0132 CF90      		pop r12
 415 0134 BF90      		pop r11
 416 0136 AF90      		pop r10
 417 0138 9F90      		pop r9
 418 013a 8F90      		pop r8
 419 013c 7F90      		pop r7
 420 013e 5F90      		pop r5
 421 0140 4F90      		pop r4
 422               	.LVL34:
 171:../../tmk_core/common/keyboard.c ****     }
 423               		.loc 1 171 0
 424 0142 0C94 0000 		jmp keyboard_set_leds
 425               	.LVL35:
 426               	.L20:
 427               	/* epilogue start */
 173:../../tmk_core/common/keyboard.c **** 
 428               		.loc 1 173 0
 429 0146 2A96      		adiw r28,10
 430 0148 0FB6      		in __tmp_reg__,__SREG__
 431 014a F894      		cli
 432 014c DEBF      		out __SP_H__,r29
 433 014e 0FBE      		out __SREG__,__tmp_reg__
 434 0150 CDBF      		out __SP_L__,r28
 435 0152 DF91      		pop r29
 436 0154 CF91      		pop r28
 437 0156 1F91      		pop r17
 438 0158 0F91      		pop r16
 439 015a FF90      		pop r15
 440 015c EF90      		pop r14
 441 015e DF90      		pop r13
 442 0160 CF90      		pop r12
 443 0162 BF90      		pop r11
 444 0164 AF90      		pop r10
 445 0166 9F90      		pop r9
 446 0168 8F90      		pop r8
 447 016a 7F90      		pop r7
 448 016c 5F90      		pop r5
 449 016e 4F90      		pop r4
 450               	.LVL36:
 451 0170 0895      		ret
 452               		.cfi_endproc
 453               	.LFE106:
 455               		.section	.progmem.data.__c.4784,"a",@progbits
 458               	__c.4784:
 459 0000 0A00      		.string	"\n"
 460               		.section	.progmem.data.__c.4782,"a",@progbits
 463               	__c.4782:
 464 0000 2530 3258 		.string	"%02X"
 464      00
 465               		.section	.progmem.data.__c.4780,"a",@progbits
 468               	__c.4780:
 469 0000 6B65 7962 		.string	"keyboard_set_led: "
 469      6F61 7264 
 469      5F73 6574 
 469      5F6C 6564 
 469      3A20 00
 470               		.section	.bss.led_status.4761,"aw",@nobits
 473               	led_status.4761:
 474 0000 00        		.zero	1
 475               		.section	.bss.matrix_prev.4760,"aw",@nobits
 478               	matrix_prev.4760:
 479 0000 0000 0000 		.zero	10
 479      0000 0000 
 479      0000 
 480               		.comm	keymap_config,1,1
 481               		.text
 482               	.Letext0:
 483               		.file 2 "/usr/avr/include/stdint.h"
 484               		.file 3 "../../tmk_core/common/keyboard.h"
 485               		.file 4 "../../tmk_core/common/matrix.h"
 486               		.file 5 "../../tmk_core/common/keymap.h"
 487               		.file 6 "../../tmk_core/common/debug.h"
 488               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 489               		.file 8 "../../tmk_core/common/timer.h"
 490               		.file 9 "../../tmk_core/common/bootmagic.h"
 491               		.file 10 "../../tmk_core/common/avr/xprintf.h"
 492               		.file 11 "../../tmk_core/common/led.h"
 493               		.file 12 "../../tmk_core/common/action.h"
 494               		.file 13 "../../tmk_core/common/mousekey.h"
 495               		.file 14 "../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/cclPdfGP.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclPdfGP.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclPdfGP.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclPdfGP.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclPdfGP.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclPdfGP.s:13     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cclPdfGP.s:29     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/cclPdfGP.s:46     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/cclPdfGP.s:69     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
     /tmp/cclPdfGP.s:468    .progmem.data.__c.4780:0000000000000000 __c.4780
     /tmp/cclPdfGP.s:463    .progmem.data.__c.4782:0000000000000000 __c.4782
     /tmp/cclPdfGP.s:458    .progmem.data.__c.4784:0000000000000000 __c.4784
     /tmp/cclPdfGP.s:150    .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/cclPdfGP.s:478    .bss.matrix_prev.4760:0000000000000000 matrix_prev.4760
     /tmp/cclPdfGP.s:473    .bss.led_status.4761:0000000000000000 led_status.4761
                            *COM*:0000000000000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
timer_read
action_exec
matrix_print
mousekey_task
host_keyboard_leds
__do_clear_bss
